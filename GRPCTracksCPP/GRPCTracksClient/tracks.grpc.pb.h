// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: tracks.proto
#ifndef GRPC_tracks_2eproto__INCLUDED
#define GRPC_tracks_2eproto__INCLUDED

#include "tracks.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace tracks {

class TracksGrpcService final {
 public:
  static constexpr char const* service_full_name() {
    return "tracks.TracksGrpcService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status UpdateFigures(::grpc::ClientContext* context, const ::tracks::ProtoFigures& request, ::tracks::ProtoFigures* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::tracks::ProtoFigures>> AsyncUpdateFigures(::grpc::ClientContext* context, const ::tracks::ProtoFigures& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::tracks::ProtoFigures>>(AsyncUpdateFiguresRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::tracks::ProtoFigures>> PrepareAsyncUpdateFigures(::grpc::ClientContext* context, const ::tracks::ProtoFigures& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::tracks::ProtoFigures>>(PrepareAsyncUpdateFiguresRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateStates(::grpc::ClientContext* context, const ::tracks::ProtoObjectStates& request, ::google::protobuf::BoolValue* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>> AsyncUpdateStates(::grpc::ClientContext* context, const ::tracks::ProtoObjectStates& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>>(AsyncUpdateStatesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>> PrepareAsyncUpdateStates(::grpc::ClientContext* context, const ::tracks::ProtoObjectStates& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>>(PrepareAsyncUpdateStatesRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateTracks(::grpc::ClientContext* context, const ::tracks::TrackPointsProto& request, ::google::protobuf::BoolValue* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>> AsyncUpdateTracks(::grpc::ClientContext* context, const ::tracks::TrackPointsProto& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>>(AsyncUpdateTracksRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>> PrepareAsyncUpdateTracks(::grpc::ClientContext* context, const ::tracks::TrackPointsProto& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>>(PrepareAsyncUpdateTracksRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void UpdateFigures(::grpc::ClientContext* context, const ::tracks::ProtoFigures* request, ::tracks::ProtoFigures* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateFigures(::grpc::ClientContext* context, const ::tracks::ProtoFigures* request, ::tracks::ProtoFigures* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateStates(::grpc::ClientContext* context, const ::tracks::ProtoObjectStates* request, ::google::protobuf::BoolValue* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateStates(::grpc::ClientContext* context, const ::tracks::ProtoObjectStates* request, ::google::protobuf::BoolValue* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateTracks(::grpc::ClientContext* context, const ::tracks::TrackPointsProto* request, ::google::protobuf::BoolValue* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateTracks(::grpc::ClientContext* context, const ::tracks::TrackPointsProto* request, ::google::protobuf::BoolValue* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::tracks::ProtoFigures>* AsyncUpdateFiguresRaw(::grpc::ClientContext* context, const ::tracks::ProtoFigures& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::tracks::ProtoFigures>* PrepareAsyncUpdateFiguresRaw(::grpc::ClientContext* context, const ::tracks::ProtoFigures& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>* AsyncUpdateStatesRaw(::grpc::ClientContext* context, const ::tracks::ProtoObjectStates& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>* PrepareAsyncUpdateStatesRaw(::grpc::ClientContext* context, const ::tracks::ProtoObjectStates& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>* AsyncUpdateTracksRaw(::grpc::ClientContext* context, const ::tracks::TrackPointsProto& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>* PrepareAsyncUpdateTracksRaw(::grpc::ClientContext* context, const ::tracks::TrackPointsProto& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status UpdateFigures(::grpc::ClientContext* context, const ::tracks::ProtoFigures& request, ::tracks::ProtoFigures* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::tracks::ProtoFigures>> AsyncUpdateFigures(::grpc::ClientContext* context, const ::tracks::ProtoFigures& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::tracks::ProtoFigures>>(AsyncUpdateFiguresRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::tracks::ProtoFigures>> PrepareAsyncUpdateFigures(::grpc::ClientContext* context, const ::tracks::ProtoFigures& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::tracks::ProtoFigures>>(PrepareAsyncUpdateFiguresRaw(context, request, cq));
    }
    ::grpc::Status UpdateStates(::grpc::ClientContext* context, const ::tracks::ProtoObjectStates& request, ::google::protobuf::BoolValue* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>> AsyncUpdateStates(::grpc::ClientContext* context, const ::tracks::ProtoObjectStates& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>>(AsyncUpdateStatesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>> PrepareAsyncUpdateStates(::grpc::ClientContext* context, const ::tracks::ProtoObjectStates& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>>(PrepareAsyncUpdateStatesRaw(context, request, cq));
    }
    ::grpc::Status UpdateTracks(::grpc::ClientContext* context, const ::tracks::TrackPointsProto& request, ::google::protobuf::BoolValue* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>> AsyncUpdateTracks(::grpc::ClientContext* context, const ::tracks::TrackPointsProto& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>>(AsyncUpdateTracksRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>> PrepareAsyncUpdateTracks(::grpc::ClientContext* context, const ::tracks::TrackPointsProto& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>>(PrepareAsyncUpdateTracksRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void UpdateFigures(::grpc::ClientContext* context, const ::tracks::ProtoFigures* request, ::tracks::ProtoFigures* response, std::function<void(::grpc::Status)>) override;
      void UpdateFigures(::grpc::ClientContext* context, const ::tracks::ProtoFigures* request, ::tracks::ProtoFigures* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateStates(::grpc::ClientContext* context, const ::tracks::ProtoObjectStates* request, ::google::protobuf::BoolValue* response, std::function<void(::grpc::Status)>) override;
      void UpdateStates(::grpc::ClientContext* context, const ::tracks::ProtoObjectStates* request, ::google::protobuf::BoolValue* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateTracks(::grpc::ClientContext* context, const ::tracks::TrackPointsProto* request, ::google::protobuf::BoolValue* response, std::function<void(::grpc::Status)>) override;
      void UpdateTracks(::grpc::ClientContext* context, const ::tracks::TrackPointsProto* request, ::google::protobuf::BoolValue* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::tracks::ProtoFigures>* AsyncUpdateFiguresRaw(::grpc::ClientContext* context, const ::tracks::ProtoFigures& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::tracks::ProtoFigures>* PrepareAsyncUpdateFiguresRaw(::grpc::ClientContext* context, const ::tracks::ProtoFigures& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>* AsyncUpdateStatesRaw(::grpc::ClientContext* context, const ::tracks::ProtoObjectStates& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>* PrepareAsyncUpdateStatesRaw(::grpc::ClientContext* context, const ::tracks::ProtoObjectStates& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>* AsyncUpdateTracksRaw(::grpc::ClientContext* context, const ::tracks::TrackPointsProto& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>* PrepareAsyncUpdateTracksRaw(::grpc::ClientContext* context, const ::tracks::TrackPointsProto& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateFigures_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateStates_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateTracks_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status UpdateFigures(::grpc::ServerContext* context, const ::tracks::ProtoFigures* request, ::tracks::ProtoFigures* response);
    virtual ::grpc::Status UpdateStates(::grpc::ServerContext* context, const ::tracks::ProtoObjectStates* request, ::google::protobuf::BoolValue* response);
    virtual ::grpc::Status UpdateTracks(::grpc::ServerContext* context, const ::tracks::TrackPointsProto* request, ::google::protobuf::BoolValue* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateFigures : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateFigures() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_UpdateFigures() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateFigures(::grpc::ServerContext* /*context*/, const ::tracks::ProtoFigures* /*request*/, ::tracks::ProtoFigures* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateFigures(::grpc::ServerContext* context, ::tracks::ProtoFigures* request, ::grpc::ServerAsyncResponseWriter< ::tracks::ProtoFigures>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateStates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateStates() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_UpdateStates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateStates(::grpc::ServerContext* /*context*/, const ::tracks::ProtoObjectStates* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateStates(::grpc::ServerContext* context, ::tracks::ProtoObjectStates* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::BoolValue>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateTracks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateTracks() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_UpdateTracks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateTracks(::grpc::ServerContext* /*context*/, const ::tracks::TrackPointsProto* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateTracks(::grpc::ServerContext* context, ::tracks::TrackPointsProto* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::BoolValue>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_UpdateFigures<WithAsyncMethod_UpdateStates<WithAsyncMethod_UpdateTracks<Service > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_UpdateFigures : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateFigures() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::tracks::ProtoFigures, ::tracks::ProtoFigures>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::tracks::ProtoFigures* request, ::tracks::ProtoFigures* response) { return this->UpdateFigures(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateFigures(
        ::grpc::MessageAllocator< ::tracks::ProtoFigures, ::tracks::ProtoFigures>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::tracks::ProtoFigures, ::tracks::ProtoFigures>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateFigures() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateFigures(::grpc::ServerContext* /*context*/, const ::tracks::ProtoFigures* /*request*/, ::tracks::ProtoFigures* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateFigures(
      ::grpc::CallbackServerContext* /*context*/, const ::tracks::ProtoFigures* /*request*/, ::tracks::ProtoFigures* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateStates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateStates() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::tracks::ProtoObjectStates, ::google::protobuf::BoolValue>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::tracks::ProtoObjectStates* request, ::google::protobuf::BoolValue* response) { return this->UpdateStates(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateStates(
        ::grpc::MessageAllocator< ::tracks::ProtoObjectStates, ::google::protobuf::BoolValue>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::tracks::ProtoObjectStates, ::google::protobuf::BoolValue>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateStates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateStates(::grpc::ServerContext* /*context*/, const ::tracks::ProtoObjectStates* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateStates(
      ::grpc::CallbackServerContext* /*context*/, const ::tracks::ProtoObjectStates* /*request*/, ::google::protobuf::BoolValue* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateTracks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateTracks() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::tracks::TrackPointsProto, ::google::protobuf::BoolValue>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::tracks::TrackPointsProto* request, ::google::protobuf::BoolValue* response) { return this->UpdateTracks(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateTracks(
        ::grpc::MessageAllocator< ::tracks::TrackPointsProto, ::google::protobuf::BoolValue>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::tracks::TrackPointsProto, ::google::protobuf::BoolValue>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateTracks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateTracks(::grpc::ServerContext* /*context*/, const ::tracks::TrackPointsProto* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateTracks(
      ::grpc::CallbackServerContext* /*context*/, const ::tracks::TrackPointsProto* /*request*/, ::google::protobuf::BoolValue* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_UpdateFigures<WithCallbackMethod_UpdateStates<WithCallbackMethod_UpdateTracks<Service > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_UpdateFigures : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateFigures() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_UpdateFigures() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateFigures(::grpc::ServerContext* /*context*/, const ::tracks::ProtoFigures* /*request*/, ::tracks::ProtoFigures* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateStates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateStates() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_UpdateStates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateStates(::grpc::ServerContext* /*context*/, const ::tracks::ProtoObjectStates* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateTracks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateTracks() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_UpdateTracks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateTracks(::grpc::ServerContext* /*context*/, const ::tracks::TrackPointsProto* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateFigures : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateFigures() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_UpdateFigures() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateFigures(::grpc::ServerContext* /*context*/, const ::tracks::ProtoFigures* /*request*/, ::tracks::ProtoFigures* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateFigures(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateStates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateStates() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_UpdateStates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateStates(::grpc::ServerContext* /*context*/, const ::tracks::ProtoObjectStates* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateStates(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateTracks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateTracks() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_UpdateTracks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateTracks(::grpc::ServerContext* /*context*/, const ::tracks::TrackPointsProto* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateTracks(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateFigures : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateFigures() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateFigures(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateFigures() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateFigures(::grpc::ServerContext* /*context*/, const ::tracks::ProtoFigures* /*request*/, ::tracks::ProtoFigures* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateFigures(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateStates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateStates() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateStates(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateStates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateStates(::grpc::ServerContext* /*context*/, const ::tracks::ProtoObjectStates* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateStates(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateTracks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateTracks() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateTracks(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateTracks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateTracks(::grpc::ServerContext* /*context*/, const ::tracks::TrackPointsProto* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateTracks(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateFigures : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateFigures() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::tracks::ProtoFigures, ::tracks::ProtoFigures>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::tracks::ProtoFigures, ::tracks::ProtoFigures>* streamer) {
                       return this->StreamedUpdateFigures(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateFigures() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateFigures(::grpc::ServerContext* /*context*/, const ::tracks::ProtoFigures* /*request*/, ::tracks::ProtoFigures* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateFigures(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::tracks::ProtoFigures,::tracks::ProtoFigures>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateStates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateStates() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::tracks::ProtoObjectStates, ::google::protobuf::BoolValue>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::tracks::ProtoObjectStates, ::google::protobuf::BoolValue>* streamer) {
                       return this->StreamedUpdateStates(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateStates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateStates(::grpc::ServerContext* /*context*/, const ::tracks::ProtoObjectStates* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateStates(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::tracks::ProtoObjectStates,::google::protobuf::BoolValue>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateTracks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateTracks() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::tracks::TrackPointsProto, ::google::protobuf::BoolValue>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::tracks::TrackPointsProto, ::google::protobuf::BoolValue>* streamer) {
                       return this->StreamedUpdateTracks(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateTracks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateTracks(::grpc::ServerContext* /*context*/, const ::tracks::TrackPointsProto* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateTracks(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::tracks::TrackPointsProto,::google::protobuf::BoolValue>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_UpdateFigures<WithStreamedUnaryMethod_UpdateStates<WithStreamedUnaryMethod_UpdateTracks<Service > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_UpdateFigures<WithStreamedUnaryMethod_UpdateStates<WithStreamedUnaryMethod_UpdateTracks<Service > > > StreamedService;
};

}  // namespace tracks


#endif  // GRPC_tracks_2eproto__INCLUDED
