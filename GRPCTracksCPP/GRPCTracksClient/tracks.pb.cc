// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tracks.proto

#include "tracks.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace tracks {
PROTOBUF_CONSTEXPR HelloRequest::HelloRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct HelloRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HelloRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~HelloRequestDefaultTypeInternal() {}
  union {
    HelloRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HelloRequestDefaultTypeInternal _HelloRequest_default_instance_;
PROTOBUF_CONSTEXPR HelloReply::HelloReply(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct HelloReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HelloReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~HelloReplyDefaultTypeInternal() {}
  union {
    HelloReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HelloReplyDefaultTypeInternal _HelloReply_default_instance_;
PROTOBUF_CONSTEXPR ProtoObjExtraProperty::ProtoObjExtraProperty(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.str_val_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.prop_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.visual_type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ProtoObjExtraPropertyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProtoObjExtraPropertyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProtoObjExtraPropertyDefaultTypeInternal() {}
  union {
    ProtoObjExtraProperty _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProtoObjExtraPropertyDefaultTypeInternal _ProtoObjExtraProperty_default_instance_;
PROTOBUF_CONSTEXPR ProtoCoord::ProtoCoord(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.lat_)*/0
  , /*decltype(_impl_.lon_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ProtoCoordDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProtoCoordDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProtoCoordDefaultTypeInternal() {}
  union {
    ProtoCoord _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProtoCoordDefaultTypeInternal _ProtoCoord_default_instance_;
PROTOBUF_CONSTEXPR ProtoGeometry::ProtoGeometry(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.coord_)*/{}
  , /*decltype(_impl_.type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ProtoGeometryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProtoGeometryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProtoGeometryDefaultTypeInternal() {}
  union {
    ProtoGeometry _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProtoGeometryDefaultTypeInternal _ProtoGeometry_default_instance_;
PROTOBUF_CONSTEXPR ProtoFig::ProtoFig(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.extra_props_)*/{}
  , /*decltype(_impl_.zoom_level_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.parent_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.external_type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.geometry_)*/nullptr
  , /*decltype(_impl_.radius_)*/0} {}
struct ProtoFigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProtoFigDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProtoFigDefaultTypeInternal() {}
  union {
    ProtoFig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProtoFigDefaultTypeInternal _ProtoFig_default_instance_;
PROTOBUF_CONSTEXPR ProtoFigures::ProtoFigures(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.figs_)*/{}
  , /*decltype(_impl_.add_tracks_)*/false} {}
struct ProtoFiguresDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProtoFiguresDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProtoFiguresDefaultTypeInternal() {}
  union {
    ProtoFigures _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProtoFiguresDefaultTypeInternal _ProtoFigures_default_instance_;
}  // namespace tracks
static ::_pb::Metadata file_level_metadata_tracks_2eproto[7];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_tracks_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_tracks_2eproto = nullptr;

const uint32_t TableStruct_tracks_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tracks::HelloRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tracks::HelloRequest, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tracks::HelloReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tracks::HelloReply, _impl_.message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tracks::ProtoObjExtraProperty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tracks::ProtoObjExtraProperty, _impl_.str_val_),
  PROTOBUF_FIELD_OFFSET(::tracks::ProtoObjExtraProperty, _impl_.prop_name_),
  PROTOBUF_FIELD_OFFSET(::tracks::ProtoObjExtraProperty, _impl_.visual_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tracks::ProtoCoord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tracks::ProtoCoord, _impl_.lat_),
  PROTOBUF_FIELD_OFFSET(::tracks::ProtoCoord, _impl_.lon_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tracks::ProtoGeometry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tracks::ProtoGeometry, _impl_.coord_),
  PROTOBUF_FIELD_OFFSET(::tracks::ProtoGeometry, _impl_.type_),
  PROTOBUF_FIELD_OFFSET(::tracks::ProtoFig, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::tracks::ProtoFig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tracks::ProtoFig, _impl_.geometry_),
  PROTOBUF_FIELD_OFFSET(::tracks::ProtoFig, _impl_.radius_),
  PROTOBUF_FIELD_OFFSET(::tracks::ProtoFig, _impl_.zoom_level_),
  PROTOBUF_FIELD_OFFSET(::tracks::ProtoFig, _impl_.extra_props_),
  PROTOBUF_FIELD_OFFSET(::tracks::ProtoFig, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::tracks::ProtoFig, _impl_.parent_id_),
  PROTOBUF_FIELD_OFFSET(::tracks::ProtoFig, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::tracks::ProtoFig, _impl_.external_type_),
  ~0u,
  3,
  0,
  ~0u,
  ~0u,
  1,
  ~0u,
  2,
  PROTOBUF_FIELD_OFFSET(::tracks::ProtoFigures, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::tracks::ProtoFigures, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tracks::ProtoFigures, _impl_.figs_),
  PROTOBUF_FIELD_OFFSET(::tracks::ProtoFigures, _impl_.add_tracks_),
  ~0u,
  0,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::tracks::HelloRequest)},
  { 7, -1, -1, sizeof(::tracks::HelloReply)},
  { 14, -1, -1, sizeof(::tracks::ProtoObjExtraProperty)},
  { 23, -1, -1, sizeof(::tracks::ProtoCoord)},
  { 31, -1, -1, sizeof(::tracks::ProtoGeometry)},
  { 39, 53, -1, sizeof(::tracks::ProtoFig)},
  { 61, 69, -1, sizeof(::tracks::ProtoFigures)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::tracks::_HelloRequest_default_instance_._instance,
  &::tracks::_HelloReply_default_instance_._instance,
  &::tracks::_ProtoObjExtraProperty_default_instance_._instance,
  &::tracks::_ProtoCoord_default_instance_._instance,
  &::tracks::_ProtoGeometry_default_instance_._instance,
  &::tracks::_ProtoFig_default_instance_._instance,
  &::tracks::_ProtoFigures_default_instance_._instance,
};

const char descriptor_table_protodef_tracks_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014tracks.proto\022\006tracks\"\034\n\014HelloRequest\022\014"
  "\n\004name\030\001 \001(\t\"\035\n\nHelloReply\022\017\n\007message\030\001 "
  "\001(\t\"P\n\025ProtoObjExtraProperty\022\017\n\007str_val\030"
  "\001 \001(\t\022\021\n\tprop_name\030\002 \001(\t\022\023\n\013visual_type\030"
  "\003 \001(\t\"&\n\nProtoCoord\022\013\n\003lat\030\001 \001(\001\022\013\n\003lon\030"
  "\002 \001(\001\"@\n\rProtoGeometry\022!\n\005coord\030\001 \003(\0132\022."
  "tracks.ProtoCoord\022\014\n\004type\030\002 \001(\t\"\235\002\n\010Prot"
  "oFig\022\'\n\010geometry\030\001 \001(\0132\025.tracks.ProtoGeo"
  "metry\022\023\n\006radius\030\002 \001(\001H\000\210\001\001\022\027\n\nzoom_level"
  "\030\003 \001(\tH\001\210\001\001\0222\n\013extra_props\030\004 \003(\0132\035.track"
  "s.ProtoObjExtraProperty\022\n\n\002id\030\005 \001(\t\022\026\n\tp"
  "arent_id\030\006 \001(\tH\002\210\001\001\022\014\n\004name\030\007 \001(\t\022\032\n\rext"
  "ernal_type\030\010 \001(\tH\003\210\001\001B\t\n\007_radiusB\r\n\013_zoo"
  "m_levelB\014\n\n_parent_idB\020\n\016_external_type\""
  "V\n\014ProtoFigures\022\036\n\004figs\030\001 \003(\0132\020.tracks.P"
  "rotoFig\022\027\n\nadd_tracks\030\002 \001(\010H\000\210\001\001B\r\n\013_add"
  "_tracks2\206\001\n\021TracksGrpcService\0224\n\010SayHell"
  "o\022\024.tracks.HelloRequest\032\022.tracks.HelloRe"
  "ply\022;\n\rUpdateFigures\022\024.tracks.ProtoFigur"
  "es\032\024.tracks.ProtoFiguresB\024\252\002\021LeafletAlar"
  "msGrpcb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_tracks_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_tracks_2eproto = {
    false, false, 814, descriptor_table_protodef_tracks_2eproto,
    "tracks.proto",
    &descriptor_table_tracks_2eproto_once, nullptr, 0, 7,
    schemas, file_default_instances, TableStruct_tracks_2eproto::offsets,
    file_level_metadata_tracks_2eproto, file_level_enum_descriptors_tracks_2eproto,
    file_level_service_descriptors_tracks_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_tracks_2eproto_getter() {
  return &descriptor_table_tracks_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_tracks_2eproto(&descriptor_table_tracks_2eproto);
namespace tracks {

// ===================================================================

class HelloRequest::_Internal {
 public:
};

HelloRequest::HelloRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tracks.HelloRequest)
}
HelloRequest::HelloRequest(const HelloRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  HelloRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:tracks.HelloRequest)
}

inline void HelloRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

HelloRequest::~HelloRequest() {
  // @@protoc_insertion_point(destructor:tracks.HelloRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void HelloRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void HelloRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void HelloRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tracks.HelloRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HelloRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tracks.HelloRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* HelloRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tracks.HelloRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tracks.HelloRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tracks.HelloRequest)
  return target;
}

size_t HelloRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tracks.HelloRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData HelloRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    HelloRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*HelloRequest::GetClassData() const { return &_class_data_; }


void HelloRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<HelloRequest*>(&to_msg);
  auto& from = static_cast<const HelloRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tracks.HelloRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void HelloRequest::CopyFrom(const HelloRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tracks.HelloRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HelloRequest::IsInitialized() const {
  return true;
}

void HelloRequest::InternalSwap(HelloRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata HelloRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tracks_2eproto_getter, &descriptor_table_tracks_2eproto_once,
      file_level_metadata_tracks_2eproto[0]);
}

// ===================================================================

class HelloReply::_Internal {
 public:
};

HelloReply::HelloReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tracks.HelloReply)
}
HelloReply::HelloReply(const HelloReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  HelloReply* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:tracks.HelloReply)
}

inline void HelloReply::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

HelloReply::~HelloReply() {
  // @@protoc_insertion_point(destructor:tracks.HelloReply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void HelloReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
}

void HelloReply::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void HelloReply::Clear() {
// @@protoc_insertion_point(message_clear_start:tracks.HelloReply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HelloReply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tracks.HelloReply.message"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* HelloReply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tracks.HelloReply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tracks.HelloReply.message");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tracks.HelloReply)
  return target;
}

size_t HelloReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tracks.HelloReply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData HelloReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    HelloReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*HelloReply::GetClassData() const { return &_class_data_; }


void HelloReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<HelloReply*>(&to_msg);
  auto& from = static_cast<const HelloReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tracks.HelloReply)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void HelloReply::CopyFrom(const HelloReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tracks.HelloReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HelloReply::IsInitialized() const {
  return true;
}

void HelloReply::InternalSwap(HelloReply* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata HelloReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tracks_2eproto_getter, &descriptor_table_tracks_2eproto_once,
      file_level_metadata_tracks_2eproto[1]);
}

// ===================================================================

class ProtoObjExtraProperty::_Internal {
 public:
};

ProtoObjExtraProperty::ProtoObjExtraProperty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tracks.ProtoObjExtraProperty)
}
ProtoObjExtraProperty::ProtoObjExtraProperty(const ProtoObjExtraProperty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ProtoObjExtraProperty* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.str_val_){}
    , decltype(_impl_.prop_name_){}
    , decltype(_impl_.visual_type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.str_val_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.str_val_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_str_val().empty()) {
    _this->_impl_.str_val_.Set(from._internal_str_val(), 
      _this->GetArenaForAllocation());
  }
  _impl_.prop_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.prop_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_prop_name().empty()) {
    _this->_impl_.prop_name_.Set(from._internal_prop_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.visual_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.visual_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_visual_type().empty()) {
    _this->_impl_.visual_type_.Set(from._internal_visual_type(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:tracks.ProtoObjExtraProperty)
}

inline void ProtoObjExtraProperty::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.str_val_){}
    , decltype(_impl_.prop_name_){}
    , decltype(_impl_.visual_type_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.str_val_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.str_val_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.prop_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.prop_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.visual_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.visual_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ProtoObjExtraProperty::~ProtoObjExtraProperty() {
  // @@protoc_insertion_point(destructor:tracks.ProtoObjExtraProperty)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ProtoObjExtraProperty::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.str_val_.Destroy();
  _impl_.prop_name_.Destroy();
  _impl_.visual_type_.Destroy();
}

void ProtoObjExtraProperty::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ProtoObjExtraProperty::Clear() {
// @@protoc_insertion_point(message_clear_start:tracks.ProtoObjExtraProperty)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.str_val_.ClearToEmpty();
  _impl_.prop_name_.ClearToEmpty();
  _impl_.visual_type_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoObjExtraProperty::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string str_val = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_str_val();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tracks.ProtoObjExtraProperty.str_val"));
        } else
          goto handle_unusual;
        continue;
      // string prop_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_prop_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tracks.ProtoObjExtraProperty.prop_name"));
        } else
          goto handle_unusual;
        continue;
      // string visual_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_visual_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tracks.ProtoObjExtraProperty.visual_type"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ProtoObjExtraProperty::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tracks.ProtoObjExtraProperty)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string str_val = 1;
  if (!this->_internal_str_val().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_str_val().data(), static_cast<int>(this->_internal_str_val().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tracks.ProtoObjExtraProperty.str_val");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_str_val(), target);
  }

  // string prop_name = 2;
  if (!this->_internal_prop_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_prop_name().data(), static_cast<int>(this->_internal_prop_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tracks.ProtoObjExtraProperty.prop_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_prop_name(), target);
  }

  // string visual_type = 3;
  if (!this->_internal_visual_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_visual_type().data(), static_cast<int>(this->_internal_visual_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tracks.ProtoObjExtraProperty.visual_type");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_visual_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tracks.ProtoObjExtraProperty)
  return target;
}

size_t ProtoObjExtraProperty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tracks.ProtoObjExtraProperty)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string str_val = 1;
  if (!this->_internal_str_val().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_str_val());
  }

  // string prop_name = 2;
  if (!this->_internal_prop_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_prop_name());
  }

  // string visual_type = 3;
  if (!this->_internal_visual_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_visual_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProtoObjExtraProperty::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ProtoObjExtraProperty::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProtoObjExtraProperty::GetClassData() const { return &_class_data_; }


void ProtoObjExtraProperty::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ProtoObjExtraProperty*>(&to_msg);
  auto& from = static_cast<const ProtoObjExtraProperty&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tracks.ProtoObjExtraProperty)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_str_val().empty()) {
    _this->_internal_set_str_val(from._internal_str_val());
  }
  if (!from._internal_prop_name().empty()) {
    _this->_internal_set_prop_name(from._internal_prop_name());
  }
  if (!from._internal_visual_type().empty()) {
    _this->_internal_set_visual_type(from._internal_visual_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProtoObjExtraProperty::CopyFrom(const ProtoObjExtraProperty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tracks.ProtoObjExtraProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoObjExtraProperty::IsInitialized() const {
  return true;
}

void ProtoObjExtraProperty::InternalSwap(ProtoObjExtraProperty* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.str_val_, lhs_arena,
      &other->_impl_.str_val_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.prop_name_, lhs_arena,
      &other->_impl_.prop_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.visual_type_, lhs_arena,
      &other->_impl_.visual_type_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoObjExtraProperty::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tracks_2eproto_getter, &descriptor_table_tracks_2eproto_once,
      file_level_metadata_tracks_2eproto[2]);
}

// ===================================================================

class ProtoCoord::_Internal {
 public:
};

ProtoCoord::ProtoCoord(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tracks.ProtoCoord)
}
ProtoCoord::ProtoCoord(const ProtoCoord& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ProtoCoord* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.lat_){}
    , decltype(_impl_.lon_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.lat_, &from._impl_.lat_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.lon_) -
    reinterpret_cast<char*>(&_impl_.lat_)) + sizeof(_impl_.lon_));
  // @@protoc_insertion_point(copy_constructor:tracks.ProtoCoord)
}

inline void ProtoCoord::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.lat_){0}
    , decltype(_impl_.lon_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ProtoCoord::~ProtoCoord() {
  // @@protoc_insertion_point(destructor:tracks.ProtoCoord)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ProtoCoord::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ProtoCoord::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ProtoCoord::Clear() {
// @@protoc_insertion_point(message_clear_start:tracks.ProtoCoord)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.lat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.lon_) -
      reinterpret_cast<char*>(&_impl_.lat_)) + sizeof(_impl_.lon_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoCoord::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // double lat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _impl_.lat_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // double lon = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          _impl_.lon_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ProtoCoord::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tracks.ProtoCoord)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // double lat = 1;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_lat = this->_internal_lat();
  uint64_t raw_lat;
  memcpy(&raw_lat, &tmp_lat, sizeof(tmp_lat));
  if (raw_lat != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_lat(), target);
  }

  // double lon = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_lon = this->_internal_lon();
  uint64_t raw_lon;
  memcpy(&raw_lon, &tmp_lon, sizeof(tmp_lon));
  if (raw_lon != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_lon(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tracks.ProtoCoord)
  return target;
}

size_t ProtoCoord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tracks.ProtoCoord)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double lat = 1;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_lat = this->_internal_lat();
  uint64_t raw_lat;
  memcpy(&raw_lat, &tmp_lat, sizeof(tmp_lat));
  if (raw_lat != 0) {
    total_size += 1 + 8;
  }

  // double lon = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_lon = this->_internal_lon();
  uint64_t raw_lon;
  memcpy(&raw_lon, &tmp_lon, sizeof(tmp_lon));
  if (raw_lon != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProtoCoord::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ProtoCoord::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProtoCoord::GetClassData() const { return &_class_data_; }


void ProtoCoord::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ProtoCoord*>(&to_msg);
  auto& from = static_cast<const ProtoCoord&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tracks.ProtoCoord)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_lat = from._internal_lat();
  uint64_t raw_lat;
  memcpy(&raw_lat, &tmp_lat, sizeof(tmp_lat));
  if (raw_lat != 0) {
    _this->_internal_set_lat(from._internal_lat());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_lon = from._internal_lon();
  uint64_t raw_lon;
  memcpy(&raw_lon, &tmp_lon, sizeof(tmp_lon));
  if (raw_lon != 0) {
    _this->_internal_set_lon(from._internal_lon());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProtoCoord::CopyFrom(const ProtoCoord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tracks.ProtoCoord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoCoord::IsInitialized() const {
  return true;
}

void ProtoCoord::InternalSwap(ProtoCoord* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtoCoord, _impl_.lon_)
      + sizeof(ProtoCoord::_impl_.lon_)
      - PROTOBUF_FIELD_OFFSET(ProtoCoord, _impl_.lat_)>(
          reinterpret_cast<char*>(&_impl_.lat_),
          reinterpret_cast<char*>(&other->_impl_.lat_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoCoord::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tracks_2eproto_getter, &descriptor_table_tracks_2eproto_once,
      file_level_metadata_tracks_2eproto[3]);
}

// ===================================================================

class ProtoGeometry::_Internal {
 public:
};

ProtoGeometry::ProtoGeometry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tracks.ProtoGeometry)
}
ProtoGeometry::ProtoGeometry(const ProtoGeometry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ProtoGeometry* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.coord_){from._impl_.coord_}
    , decltype(_impl_.type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_type().empty()) {
    _this->_impl_.type_.Set(from._internal_type(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:tracks.ProtoGeometry)
}

inline void ProtoGeometry::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.coord_){arena}
    , decltype(_impl_.type_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ProtoGeometry::~ProtoGeometry() {
  // @@protoc_insertion_point(destructor:tracks.ProtoGeometry)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ProtoGeometry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.coord_.~RepeatedPtrField();
  _impl_.type_.Destroy();
}

void ProtoGeometry::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ProtoGeometry::Clear() {
// @@protoc_insertion_point(message_clear_start:tracks.ProtoGeometry)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.coord_.Clear();
  _impl_.type_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoGeometry::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .tracks.ProtoCoord coord = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_coord(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tracks.ProtoGeometry.type"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ProtoGeometry::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tracks.ProtoGeometry)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tracks.ProtoCoord coord = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_coord_size()); i < n; i++) {
    const auto& repfield = this->_internal_coord(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string type = 2;
  if (!this->_internal_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tracks.ProtoGeometry.type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tracks.ProtoGeometry)
  return target;
}

size_t ProtoGeometry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tracks.ProtoGeometry)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tracks.ProtoCoord coord = 1;
  total_size += 1UL * this->_internal_coord_size();
  for (const auto& msg : this->_impl_.coord_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string type = 2;
  if (!this->_internal_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProtoGeometry::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ProtoGeometry::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProtoGeometry::GetClassData() const { return &_class_data_; }


void ProtoGeometry::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ProtoGeometry*>(&to_msg);
  auto& from = static_cast<const ProtoGeometry&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tracks.ProtoGeometry)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.coord_.MergeFrom(from._impl_.coord_);
  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProtoGeometry::CopyFrom(const ProtoGeometry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tracks.ProtoGeometry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoGeometry::IsInitialized() const {
  return true;
}

void ProtoGeometry::InternalSwap(ProtoGeometry* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.coord_.InternalSwap(&other->_impl_.coord_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.type_, lhs_arena,
      &other->_impl_.type_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoGeometry::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tracks_2eproto_getter, &descriptor_table_tracks_2eproto_once,
      file_level_metadata_tracks_2eproto[4]);
}

// ===================================================================

class ProtoFig::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoFig>()._impl_._has_bits_);
  static const ::tracks::ProtoGeometry& geometry(const ProtoFig* msg);
  static void set_has_radius(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_zoom_level(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_parent_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_external_type(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::tracks::ProtoGeometry&
ProtoFig::_Internal::geometry(const ProtoFig* msg) {
  return *msg->_impl_.geometry_;
}
ProtoFig::ProtoFig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tracks.ProtoFig)
}
ProtoFig::ProtoFig(const ProtoFig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ProtoFig* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.extra_props_){from._impl_.extra_props_}
    , decltype(_impl_.zoom_level_){}
    , decltype(_impl_.id_){}
    , decltype(_impl_.parent_id_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.external_type_){}
    , decltype(_impl_.geometry_){nullptr}
    , decltype(_impl_.radius_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.zoom_level_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.zoom_level_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_zoom_level()) {
    _this->_impl_.zoom_level_.Set(from._internal_zoom_level(), 
      _this->GetArenaForAllocation());
  }
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.parent_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_parent_id()) {
    _this->_impl_.parent_id_.Set(from._internal_parent_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.external_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.external_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_external_type()) {
    _this->_impl_.external_type_.Set(from._internal_external_type(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_geometry()) {
    _this->_impl_.geometry_ = new ::tracks::ProtoGeometry(*from._impl_.geometry_);
  }
  _this->_impl_.radius_ = from._impl_.radius_;
  // @@protoc_insertion_point(copy_constructor:tracks.ProtoFig)
}

inline void ProtoFig::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.extra_props_){arena}
    , decltype(_impl_.zoom_level_){}
    , decltype(_impl_.id_){}
    , decltype(_impl_.parent_id_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.external_type_){}
    , decltype(_impl_.geometry_){nullptr}
    , decltype(_impl_.radius_){0}
  };
  _impl_.zoom_level_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.zoom_level_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.parent_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.external_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.external_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ProtoFig::~ProtoFig() {
  // @@protoc_insertion_point(destructor:tracks.ProtoFig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ProtoFig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.extra_props_.~RepeatedPtrField();
  _impl_.zoom_level_.Destroy();
  _impl_.id_.Destroy();
  _impl_.parent_id_.Destroy();
  _impl_.name_.Destroy();
  _impl_.external_type_.Destroy();
  if (this != internal_default_instance()) delete _impl_.geometry_;
}

void ProtoFig::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ProtoFig::Clear() {
// @@protoc_insertion_point(message_clear_start:tracks.ProtoFig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.extra_props_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.zoom_level_.ClearNonDefaultToEmpty();
  }
  _impl_.id_.ClearToEmpty();
  if (cached_has_bits & 0x00000002u) {
    _impl_.parent_id_.ClearNonDefaultToEmpty();
  }
  _impl_.name_.ClearToEmpty();
  if (cached_has_bits & 0x00000004u) {
    _impl_.external_type_.ClearNonDefaultToEmpty();
  }
  if (GetArenaForAllocation() == nullptr && _impl_.geometry_ != nullptr) {
    delete _impl_.geometry_;
  }
  _impl_.geometry_ = nullptr;
  _impl_.radius_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoFig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .tracks.ProtoGeometry geometry = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_geometry(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional double radius = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          _Internal::set_has_radius(&has_bits);
          _impl_.radius_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional string zoom_level = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_zoom_level();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tracks.ProtoFig.zoom_level"));
        } else
          goto handle_unusual;
        continue;
      // repeated .tracks.ProtoObjExtraProperty extra_props = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_extra_props(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tracks.ProtoFig.id"));
        } else
          goto handle_unusual;
        continue;
      // optional string parent_id = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_parent_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tracks.ProtoFig.parent_id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tracks.ProtoFig.name"));
        } else
          goto handle_unusual;
        continue;
      // optional string external_type = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_external_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tracks.ProtoFig.external_type"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ProtoFig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tracks.ProtoFig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .tracks.ProtoGeometry geometry = 1;
  if (this->_internal_has_geometry()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::geometry(this),
        _Internal::geometry(this).GetCachedSize(), target, stream);
  }

  // optional double radius = 2;
  if (_internal_has_radius()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_radius(), target);
  }

  // optional string zoom_level = 3;
  if (_internal_has_zoom_level()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_zoom_level().data(), static_cast<int>(this->_internal_zoom_level().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tracks.ProtoFig.zoom_level");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_zoom_level(), target);
  }

  // repeated .tracks.ProtoObjExtraProperty extra_props = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_extra_props_size()); i < n; i++) {
    const auto& repfield = this->_internal_extra_props(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string id = 5;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tracks.ProtoFig.id");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_id(), target);
  }

  // optional string parent_id = 6;
  if (_internal_has_parent_id()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent_id().data(), static_cast<int>(this->_internal_parent_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tracks.ProtoFig.parent_id");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_parent_id(), target);
  }

  // string name = 7;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tracks.ProtoFig.name");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_name(), target);
  }

  // optional string external_type = 8;
  if (_internal_has_external_type()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_external_type().data(), static_cast<int>(this->_internal_external_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tracks.ProtoFig.external_type");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_external_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tracks.ProtoFig)
  return target;
}

size_t ProtoFig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tracks.ProtoFig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tracks.ProtoObjExtraProperty extra_props = 4;
  total_size += 1UL * this->_internal_extra_props_size();
  for (const auto& msg : this->_impl_.extra_props_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional string zoom_level = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_zoom_level());
  }

  // string id = 5;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // optional string parent_id = 6;
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent_id());
  }

  // string name = 7;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // optional string external_type = 8;
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_external_type());
  }

  // .tracks.ProtoGeometry geometry = 1;
  if (this->_internal_has_geometry()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.geometry_);
  }

  // optional double radius = 2;
  if (cached_has_bits & 0x00000008u) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProtoFig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ProtoFig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProtoFig::GetClassData() const { return &_class_data_; }


void ProtoFig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ProtoFig*>(&to_msg);
  auto& from = static_cast<const ProtoFig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tracks.ProtoFig)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.extra_props_.MergeFrom(from._impl_.extra_props_);
  if (from._internal_has_zoom_level()) {
    _this->_internal_set_zoom_level(from._internal_zoom_level());
  }
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_has_parent_id()) {
    _this->_internal_set_parent_id(from._internal_parent_id());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_has_external_type()) {
    _this->_internal_set_external_type(from._internal_external_type());
  }
  if (from._internal_has_geometry()) {
    _this->_internal_mutable_geometry()->::tracks::ProtoGeometry::MergeFrom(
        from._internal_geometry());
  }
  if (from._internal_has_radius()) {
    _this->_internal_set_radius(from._internal_radius());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProtoFig::CopyFrom(const ProtoFig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tracks.ProtoFig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoFig::IsInitialized() const {
  return true;
}

void ProtoFig::InternalSwap(ProtoFig* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.extra_props_.InternalSwap(&other->_impl_.extra_props_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.zoom_level_, lhs_arena,
      &other->_impl_.zoom_level_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.parent_id_, lhs_arena,
      &other->_impl_.parent_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.external_type_, lhs_arena,
      &other->_impl_.external_type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtoFig, _impl_.radius_)
      + sizeof(ProtoFig::_impl_.radius_)
      - PROTOBUF_FIELD_OFFSET(ProtoFig, _impl_.geometry_)>(
          reinterpret_cast<char*>(&_impl_.geometry_),
          reinterpret_cast<char*>(&other->_impl_.geometry_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoFig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tracks_2eproto_getter, &descriptor_table_tracks_2eproto_once,
      file_level_metadata_tracks_2eproto[5]);
}

// ===================================================================

class ProtoFigures::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoFigures>()._impl_._has_bits_);
  static void set_has_add_tracks(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ProtoFigures::ProtoFigures(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tracks.ProtoFigures)
}
ProtoFigures::ProtoFigures(const ProtoFigures& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ProtoFigures* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.figs_){from._impl_.figs_}
    , decltype(_impl_.add_tracks_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.add_tracks_ = from._impl_.add_tracks_;
  // @@protoc_insertion_point(copy_constructor:tracks.ProtoFigures)
}

inline void ProtoFigures::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.figs_){arena}
    , decltype(_impl_.add_tracks_){false}
  };
}

ProtoFigures::~ProtoFigures() {
  // @@protoc_insertion_point(destructor:tracks.ProtoFigures)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ProtoFigures::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.figs_.~RepeatedPtrField();
}

void ProtoFigures::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ProtoFigures::Clear() {
// @@protoc_insertion_point(message_clear_start:tracks.ProtoFigures)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.figs_.Clear();
  _impl_.add_tracks_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoFigures::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .tracks.ProtoFig figs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_figs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional bool add_tracks = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_add_tracks(&has_bits);
          _impl_.add_tracks_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ProtoFigures::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tracks.ProtoFigures)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tracks.ProtoFig figs = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_figs_size()); i < n; i++) {
    const auto& repfield = this->_internal_figs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional bool add_tracks = 2;
  if (_internal_has_add_tracks()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_add_tracks(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tracks.ProtoFigures)
  return target;
}

size_t ProtoFigures::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tracks.ProtoFigures)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tracks.ProtoFig figs = 1;
  total_size += 1UL * this->_internal_figs_size();
  for (const auto& msg : this->_impl_.figs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional bool add_tracks = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProtoFigures::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ProtoFigures::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProtoFigures::GetClassData() const { return &_class_data_; }


void ProtoFigures::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ProtoFigures*>(&to_msg);
  auto& from = static_cast<const ProtoFigures&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tracks.ProtoFigures)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.figs_.MergeFrom(from._impl_.figs_);
  if (from._internal_has_add_tracks()) {
    _this->_internal_set_add_tracks(from._internal_add_tracks());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProtoFigures::CopyFrom(const ProtoFigures& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tracks.ProtoFigures)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoFigures::IsInitialized() const {
  return true;
}

void ProtoFigures::InternalSwap(ProtoFigures* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.figs_.InternalSwap(&other->_impl_.figs_);
  swap(_impl_.add_tracks_, other->_impl_.add_tracks_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoFigures::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tracks_2eproto_getter, &descriptor_table_tracks_2eproto_once,
      file_level_metadata_tracks_2eproto[6]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace tracks
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::tracks::HelloRequest*
Arena::CreateMaybeMessage< ::tracks::HelloRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tracks::HelloRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::tracks::HelloReply*
Arena::CreateMaybeMessage< ::tracks::HelloReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tracks::HelloReply >(arena);
}
template<> PROTOBUF_NOINLINE ::tracks::ProtoObjExtraProperty*
Arena::CreateMaybeMessage< ::tracks::ProtoObjExtraProperty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tracks::ProtoObjExtraProperty >(arena);
}
template<> PROTOBUF_NOINLINE ::tracks::ProtoCoord*
Arena::CreateMaybeMessage< ::tracks::ProtoCoord >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tracks::ProtoCoord >(arena);
}
template<> PROTOBUF_NOINLINE ::tracks::ProtoGeometry*
Arena::CreateMaybeMessage< ::tracks::ProtoGeometry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tracks::ProtoGeometry >(arena);
}
template<> PROTOBUF_NOINLINE ::tracks::ProtoFig*
Arena::CreateMaybeMessage< ::tracks::ProtoFig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tracks::ProtoFig >(arena);
}
template<> PROTOBUF_NOINLINE ::tracks::ProtoFigures*
Arena::CreateMaybeMessage< ::tracks::ProtoFigures >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tracks::ProtoFigures >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
